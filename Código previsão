### Importando e separando dados do INMET
#Obtendo dados
import requests

#Alterar data inicial / Data final na url 
url = "https://apitempo.inmet.gov.br/estacao/2022-04-25/2022-04-25/A201"
resultado = requests.get(url)
dados = resultado.json()

#Convertendo em um DataFrame e filtrando
import pandas as pd
import json

dados_str = json.dumps(dados)
dados_tabela = pd.read_json(dados_str)

dados_filtrados = dados_tabela[["DT_MEDICAO","HR_MEDICAO","RAD_GLO","TEM_INS","UMD_INS"]]

print(dados_filtrados)


### Lidando com NAs (falta alterar)
import matplotlib.pyplot as plt

##Coluna umidade com NAs
coluna_umidade_cNAs = dados_filtrados[["UMD_INS"]]
#Numero de NAs
print("Numero de NAs na umidade",coluna_umidade_cNAs.isna().sum())
#Correção linear de NAs
coluna_umidade = coluna_umidade_cNAs.interpolate(method="linear")
#Numero de NAs final 
print("Numero de NAs na umidade",coluna_umidade.isna().sum())
#Gráficos de NAS
#coluna_umidade_cNAs.plot(figsize=(22,4), label="original")
#coluna_umidade.plot(figsize=(22,4),style=["--"],label="Com correção linear")
#plt.legend()
#print(coluna_umidade)

##Coluna temperatura com NAs
coluna_temperatura_cNAs = dados_filtrados[["TEM_INS"]]
#Numero de NAs
print("Numero de NAs na temperatura",coluna_temperatura_cNAs.isna().sum())
#Correção linear de NAs
coluna_temperatura = coluna_temperatura_cNAs.interpolate(method="linear")
#Numero de NAs final 
print("Numero de NAs na temperatura",coluna_temperatura.isna().sum())
#Gráficos de NAS
#coluna_temperatura_cNAs.plot(figsize=(22,4), label="original")
#coluna_temperatura.plot(figsize=(22,4),style=["--"],label="Com correção linear")
#plt.legend()
#print(coluna_temperatura)

##Coluna radiação com NAs
coluna_radiacao_cNAs_0 = dados_filtrados[["RAD_GLO"]]
#Correção de números negativos
#fazer coluna_radiacao_cNAs = x for x em coluna_radiacao_0 se um dos elementos de coluna for maior que 0, se não igualar a zero
#Numero de NAs
print("Numero de NAs na radiação",coluna_radiacao_cNAs.isna().sum())
#Correção linear de NAs
coluna_radiacao = coluna_radiacao_cNAs.interpolate(method="linear")
#Numero de NAs final 
print("Numero de NAs na radiação",coluna_radiacao.isna().sum())
#Gráficos de NAS
#coluna_radiacao_cNAs.plot(figsize=(22,4), label="original")
#coluna_radiacao.plot(figsize=(22,4),style=["--"],label="Com correção linear")
#plt.legend()
#print(coluna_radiacao)


### Umidade (falta alterar)(ajustar os dados e fazer a análise gráfica e testes com arima)
umidade = dados_filtrados[["DT_MEDICAO","HR_MEDICAO","UMD_INS"]]
print(umidade)


### Temperatura (falta alterar)(ajustar os dados e fazer a análise gráfica e testes com arima)
temperatura = dados_filtrados[["DT_MEDICAO","HR_MEDICAO","TEM_INS"]]
print(temperatura)


### Radiação (falta alterar)(ajustar os dados e fazer a análise gráfica e testes com arima)
radiação = dados_filtrados[["DT_MEDICAO","HR_MEDICAO","RAD_GLO"]]
print(radiação)
###corrigir os 0<
